{"uid":"d560f5733f5b16a5","name":"TestCheckoutPageLoaded","fullName":"SauceDemoAutomationUI:SauceDemoAutomationUI.Tests.CheckoutTests.TestCheckoutPageLoaded()","historyId":"3b30fc515b7c3a4318445301779d49ea","time":{"start":1754832234606,"stop":1754832234620,"duration":14},"status":"broken","statusMessage":"System.Net.WebException : Name or service not known (msedgedriver.azureedge.net:443)\n  ----> System.Net.Http.HttpRequestException : Name or service not known (msedgedriver.azureedge.net:443)\n  ----> System.Net.Sockets.SocketException : Name or service not known","statusTrace":"   at System.Net.HttpWebRequest.GetResponse()\n   at WebDriverManager.DriverConfigs.Impl.EdgeConfig.GetLatestVersion(String url)\n   at WebDriverManager.DriverConfigs.Impl.EdgeConfig.GetLatestVersion()\n   at WebDriverManager.DriverManager.GetVersionToDownload(IDriverConfig config, String version)\n   at WebDriverManager.DriverManager.SetUpDriver(IDriverConfig config, String version, Architecture architecture)\n   at SauceDemoAutomationUI.Drivers.WebDriverFactory.CreateDriver(String browser) in /home/runner/work/Saucedemo-QA-Automation/Saucedemo-QA-Automation/SauceDemoAutomationUI/Drivers/WebDriverFactory.cs:line 54\n   at SauceDemoAutomationUI.Tests.BaseTests.SetUp() in /home/runner/work/Saucedemo-QA-Automation/Saucedemo-QA-Automation/SauceDemoAutomationUI/Tests/BaseTests.cs:line 22\n   at InvokeStub_BaseTests.SetUp(Object, Object, IntPtr*)\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\n--HttpRequestException\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellation(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.HttpMessageHandlerStage.Send(HttpRequestMessage request, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpMessageHandlerStage.Send(HttpRequestMessage request, CancellationToken cancellationToken)\n   at System.Net.Http.Metrics.MetricsHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpMessageHandlerStage.Send(HttpRequestMessage request, CancellationToken cancellationToken)\n   at System.Net.Http.SocketsHttpHandler.Send(HttpRequestMessage request, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.Send(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationToken cancellationToken)\n   at System.Net.HttpWebRequest.SendRequest(Boolean async)\n   at System.Net.HttpWebRequest.GetResponse()\n--SocketException\n   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)\n   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)\n   at System.Net.Sockets.Socket.Connect(String host, Int32 port)\n   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\n   at System.Net.HttpWebRequest.<>c__DisplayClass219_0.<<CreateHttpClient>b__1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":"ParallelWorker#2"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"language","value":"C#"},{"name":"framework","value":"NUnit 3"},{"name":"package","value":"SauceDemoAutomationUI.Tests"},{"name":"testMethod","value":"TestCheckoutPageLoaded"},{"name":"testClass","value":"CheckoutTests"},{"name":"tag","value":"UI"},{"name":"severity","value":"blocker"},{"name":"owner","value":"Automation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["UI"]},"source":"d560f5733f5b16a5.json","parameterValues":[]}